{"version":3,"file":"ng-selectize.component.js","sourceRoot":"","sources":["../src/ng-selectize.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n\tInput,\r\n\tOnInit,\r\n\tOnChanges,\r\n\tSimpleChanges,\r\n\tDoCheck,\r\n\tforwardRef,\r\n\tComponent,\r\n\tViewChild,\r\n\tOutput,\r\n\tEventEmitter\r\n} from \"@angular/core\";\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl} from \"@angular/forms\";\r\n\r\ndeclare const $:any;\r\n\r\nconst isEqual = require('lodash.isequal');\r\nconst cloneDeep = require('lodash.clonedeep');\r\nconst find = require('lodash.find');\r\nconst differenceWith = require('lodash.differencewith');\r\n\r\nexport const SELECTIZE_VALUE_ACCESSOR: any = {\r\n\tprovide: NG_VALUE_ACCESSOR,\r\n\tuseExisting: forwardRef(() => NgSelectizeComponent),\r\n\tmulti: true\r\n};\r\n\r\n\r\nexport class NgSelectizeComponent implements OnInit, OnChanges, DoCheck, ControlValueAccessor {\r\n\t config: any;\r\n\t options: any[];\r\n\t optionGroups: any[];\r\n\t placeholder: string;\r\n\t hasOptionsPlaceholder: string;\r\n\t noOptionsPlaceholder: string;\r\n\t enabled: boolean;\r\n\t _value: string[];\r\n\t formControl:FormControl;\r\n\t errorClass:string;\r\n\r\n\t onBlur:EventEmitter<void> = new EventEmitter<void>(false);\r\n\r\n\t selectizeInput: any;\r\n\r\n\tprivate selectize: any;\r\n\tprivate _oldOptions: any[];\r\n\r\n\tprivate _oldOptionGroups: any[];\r\n\t// Control value accessors.\r\n\tprivate onTouchedCallback: () => void = () => {};\r\n\tprivate onChangeCallback: (_: any) => void = () => {};\r\n\r\n\tconstructor() {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.selectize = $(this.selectizeInput.nativeElement).selectize(this.config)[0].selectize;\r\n\t\tthis.selectize.on('change', this.onSelectizeValueChange.bind(this));\r\n\t\tthis.selectize.on('option_add', this.onSelectizeOptionAdd.bind(this));\r\n\t\tthis.selectize.on('blur', this.onBlurEvent.bind(this));\r\n\r\n\t\tthis.onSelectizeOptionsChange();\r\n\t\tthis.onSelectizeOptionGroupChange();\r\n\t\tif (this.placeholder && this.placeholder.length > 0) {\r\n\t\t\tthis.updatePlaceholder();\r\n\t\t}\r\n\t\tthis._oldOptions = cloneDeep(this.options);\r\n\t\tthis._oldOptionGroups = cloneDeep(this.optionGroups);\r\n\t}\r\n\r\n\t/**\r\n\t * Change detection for primitive types.\r\n\t */\r\n\tngOnChanges(changes: SimpleChanges): void {\r\n\t\tif (this.selectize) {\r\n\t\t\tif (changes.hasOwnProperty('placeholder') || changes.hasOwnProperty('hasOptionsPlaceholder') || changes.hasOwnProperty('noOptionsPlaceholder')) {\r\n\t\t\t\tthis.updatePlaceholder();\r\n\t\t\t}\r\n\t\t\tif (changes.hasOwnProperty('enabled')) {\r\n\t\t\t\tthis.onEnabledStatusChange();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Implementing deep check for option comparison\r\n\t *\r\n\t * FIXME -> Implement deep check to only compare against label and value fields.\r\n\t */\r\n\tngDoCheck(): void {\r\n\t\tif (!isEqual(this._oldOptions, this.options)) {\r\n\t\t\tthis.onSelectizeOptionsChange();\r\n\t\t\tthis._oldOptions = cloneDeep(this.options);\r\n\t\t}\r\n\t\tif (!isEqual(this._oldOptionGroups, this.optionGroups)) {\r\n\t\t\tthis.onSelectizeOptionGroupChange();\r\n\t\t\tthis._oldOptionGroups = cloneDeep(this.optionGroups);\r\n\t\t}\r\n\t\tthis.evalHasError();\r\n\t}\r\n\r\n\tonBlurEvent() {\r\n\t\tif (this.formControl) {\r\n\t\t\tthis.formControl.markAsTouched();\r\n\t\t}\r\n\t\tthis.onBlur.emit();\r\n\t\tthis.evalHasError();\r\n\t}\r\n\r\n\t/**\r\n\t * Refresh selected values when options change.\r\n\t */\r\n\tonSelectizeOptionAdd(optionValue:string): void {\r\n\t\tif (this.value) {\r\n\t\t\tconst items = typeof this.value === 'string' ? [this.value] : this.value;\r\n\t\t\tif (find(items, (value:any) => {\r\n\t\t\t\t\treturn value === optionValue\r\n\t\t\t\t})) {\r\n\t\t\t\tthis.selectize.addItem(optionValue, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tevalHasError() {\r\n\t\tif(this.formControl && this.formControl.touched && this.formControl.invalid) {\r\n\t\t\t$(this.selectize.$control).parent().addClass(this.errorClass || 'has-error');\r\n\t\t} else {\r\n\t\t\t$(this.selectize.$control).parent().removeClass(this.errorClass || 'has-error');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update the current placeholder based on the given input parameter.\r\n\t */\r\n\tupdatePlaceholder(): void {\r\n\t\tthis.selectize.settings.placeholder = this.getPlaceholder();\r\n\t\tthis.selectize.updatePlaceholder();\r\n\t\tthis.selectize.showInput(); // Without this, when options are cleared placeholder only appears after focus.\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a change is detected in the 'enabled' input field.\r\n\t * Sets the selectize state based on the new value.\r\n\t */\r\n\tonEnabledStatusChange(): void {\r\n\t\tthis.enabled ? this.selectize.enable() : this.selectize.disable();\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered when a change is detected with the given set of options.\r\n\t */\r\n\tonSelectizeOptionsChange(): void {\r\n\t\tconst optionsRemoved = differenceWith(this._oldOptions, this.options, (oldValue:any, newValue:any) => {\r\n\t\t\treturn oldValue[this.selectize.settings.valueField] === newValue[this.selectize.settings.valueField]\r\n\t\t\t\t&& oldValue[this.selectize.settings.labelField] === newValue[this.selectize.settings.labelField];\r\n\t\t});\r\n\r\n\t\tconst newOptionsAdded = differenceWith(this.options, this._oldOptions, (oldValue:any, newValue:any) => {\r\n\t\t\treturn oldValue[this.selectize.settings.valueField] === newValue[this.selectize.settings.valueField]\r\n\t\t\t\t&& oldValue[this.selectize.settings.labelField] === newValue[this.selectize.settings.labelField];\r\n\t\t});\r\n\r\n\t\tif (optionsRemoved && optionsRemoved.length > 0) {\r\n\t\t\toptionsRemoved.forEach((option:any) => {\r\n\t\t\t\tthis.selectize.removeOption(option[this.selectize.settings.valueField]);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (newOptionsAdded && newOptionsAdded.length > 0) {\r\n\t\t\tnewOptionsAdded.forEach((option:any) => {\r\n\t\t\t\tthis.selectize.addOption(cloneDeep(option));\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.updatePlaceholder();\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered when a change is detected with the given set of option groups.\r\n\t */\r\n\tonSelectizeOptionGroupChange(): void {\r\n\t\tif (this.optionGroups != null && this.optionGroups.length > 0) {\r\n\t\t\tthis.optionGroups.forEach((optionGroup) => {\r\n\t\t\t\tthis.selectize.addOptionGroup(optionGroup.id, optionGroup);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches change event when a value change is detected.\r\n\t * @param $event\r\n\t */\r\n\tonSelectizeValueChange($event:any): void {\r\n\t\tthis.value = this.selectize.getValue();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the applicable placeholder.\r\n\t */\r\n\tgetPlaceholder(): string {\r\n\t\tlet newPlaceholder: string;\r\n\t\tif (this.options != null && this.options.length > 0 && this.hasOptionsPlaceholder != null && this.hasOptionsPlaceholder.length > 0) {\r\n\t\t\tnewPlaceholder = this.hasOptionsPlaceholder;\r\n\t\t} else if ((this.options == null || this.options.length == 0) && (this.noOptionsPlaceholder != null && this.noOptionsPlaceholder.length > 0)) { // no options\r\n\t\t\tnewPlaceholder = this.noOptionsPlaceholder\r\n\t\t} else {\r\n\t\t\tnewPlaceholder = this.placeholder;\r\n\t\t}\r\n\t\treturn newPlaceholder;\r\n\t}\r\n\r\n\t/**\r\n\t * Implementation from ControlValueAccessor\r\n\t *\r\n\t * Empty check on 'obj' removed due to restriction on resetting the field.\r\n\t * From testing, async should still function appropriately.\r\n\t *\r\n\t * FIXME This might not be necessary anymore..\r\n\t *\r\n\t * @param obj\r\n\t */\r\n\twriteValue(obj: any): void {\r\n\t\tif (obj !== this._value) {\r\n\t\t\tthis._value = obj;\r\n\t\t}\r\n        this.selectize.setValue(this._value);\r\n\t}\r\n\r\n\t/**\r\n\t * Implementation from ControlValueAccessor, callback for (ngModelChange)\r\n\t * @param fn\r\n\t */\r\n\tregisterOnChange(fn: any): void {\r\n\t\tthis.onChangeCallback = fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Implementation from ControlValueAccessor\r\n\t * @param fn\r\n\t */\r\n\tregisterOnTouched(fn: any): void {\r\n\t\tthis.onTouchedCallback = fn;\r\n\t}\r\n\r\n\tget value(): string[] {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\tset value(value: string[]) {\r\n\t\tif (this._value !== value) {\r\n\t\t\tsetTimeout(() => { // Fix for change after check issue in development mode.\r\n\t\t\t\tthis._value = cloneDeep(value);\r\n\t\t\t\tthis.onChangeCallback(this._value);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n\tselector: 'ng-selectize',\r\n\ttemplate: `<select #selectizeInput></select>`,\r\n\tproviders: [SELECTIZE_VALUE_ACCESSOR]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input, args: ['config', ] },],\n'options': [{ type: Input, args: ['options', ] },],\n'optionGroups': [{ type: Input, args: ['optionGroups', ] },],\n'placeholder': [{ type: Input, args: ['placeholder', ] },],\n'hasOptionsPlaceholder': [{ type: Input, args: ['hasOptionsPlaceholder', ] },],\n'noOptionsPlaceholder': [{ type: Input, args: ['noOptionsPlaceholder', ] },],\n'enabled': [{ type: Input, args: ['enabled', ] },],\n'_value': [{ type: Input, args: ['ngModel', ] },],\n'formControl': [{ type: Input },],\n'errorClass': [{ type: Input },],\n'onBlur': [{ type: Output },],\n'selectizeInput': [{ type: ViewChild, args: ['selectizeInput', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}